{
  "paragraphs": [
    {
      "text": "%md\n### Loading dependencies",
      "user": "anonymous",
      "dateUpdated": "2019-01-08 10:00:42.401",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eLoading dependencies\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546941600701_-1502477250",
      "id": "20190108-100000_1635115601",
      "dateCreated": "2019-01-08 10:00:00.702",
      "dateStarted": "2019-01-08 10:00:42.408",
      "dateFinished": "2019-01-08 10:00:42.435",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\u003cspan style\u003d\"color:red\"\u003e\u003cb\u003eWARNNINGS\u003c/b\u003e\u003c/span\u003e\n+ To make `spark-csv` works, please add in `spark-defaults.conf` the following link `com.github.tototoshi:scala-csv_2.11:1.3.5` to the option `spark.jars.packages`\n+ When indicating a file path, please write the whole string : `/home/lem/downloads/file.txt` or `/home/lem/downloads`, otherwise some bugs on the notebook can occure\n+ Update file paths on this notebook accordingly to your environment\n+ Some data processed under the hood are to be found on the temp directory : `/tmp`",
      "user": "anonymous",
      "dateUpdated": "2019-01-08 22:00:38.486",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cspan style\u003d\"color:red\"\u003e\u003cb\u003eWARNNINGS\u003c/b\u003e\u003c/span\u003e\n\u003cul\u003e\n  \u003cli\u003eTo make \u003ccode\u003espark-csv\u003c/code\u003e works, please add in \u003ccode\u003espark-defaults.conf\u003c/code\u003e the following link \u003ccode\u003ecom.github.tototoshi:scala-csv_2.11:1.3.5\u003c/code\u003e to the option \u003ccode\u003espark.jars.packages\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003eWhen indicating a file path, please write the whole string : \u003ccode\u003e/home/lem/downloads/file.txt\u003c/code\u003e or \u003ccode\u003e/home/lem/downloads\u003c/code\u003e, otherwise some bugs on the notebook can occure\u003c/li\u003e\n  \u003cli\u003eUpdate file paths on this notebook accordingly to your environment\u003c/li\u003e\n  \u003cli\u003eSome data processed under the hood are to be found on the temp directory : \u003ccode\u003e/tmp\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546978028435_-1349569084",
      "id": "20190108-200708_1591320591",
      "dateCreated": "2019-01-08 20:07:08.436",
      "dateStarted": "2019-01-08 22:00:38.496",
      "dateFinished": "2019-01-08 22:00:38.563",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import scala.language.postfixOps\nimport scala.sys.process._\nimport scala.io.Source.{fromFile}\nimport com.github.tototoshi.csv._\nimport java.net.{HttpURLConnection, URL}\nimport java.io.File\nimport java.text.SimpleDateFormat\nimport java.util.Date",
      "user": "anonymous",
      "dateUpdated": "2019-01-08 21:43:52.399",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import scala.language.postfixOps\nimport scala.sys.process._\nimport scala.io.Source.fromFile\nimport com.github.tototoshi.csv._\nimport java.net.{HttpURLConnection, URL}\nimport java.io.File\nimport java.text.SimpleDateFormat\nimport java.util.Date\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546939531507_-170896855",
      "id": "20190108-092531_1166481816",
      "dateCreated": "2019-01-08 09:25:31.507",
      "dateStarted": "2019-01-08 21:43:52.680",
      "dateFinished": "2019-01-08 21:44:21.807",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### (Any) File Downloader Function",
      "user": "anonymous",
      "dateUpdated": "2019-01-08 10:03:51.957",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003e(Any) File Downloader Function\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546941737943_-94327200",
      "id": "20190108-100217_630125061",
      "dateCreated": "2019-01-08 10:02:17.944",
      "dateStarted": "2019-01-08 10:03:51.971",
      "dateFinished": "2019-01-08 10:03:52.003",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "def fileDownloader(urlOfFileToDownload: String, fileName: String) \u003d {\n    val file \u003d new File(fileName)\n    val parentDirName \u003d new File(file.getParent())\n    if (! parentDirName.exists()){\n        parentDirName.mkdirs();\n    }\n    val url \u003d new URL(urlOfFileToDownload)\n    val connection \u003d url.openConnection().asInstanceOf[HttpURLConnection]\n    connection.setConnectTimeout(5000)\n    connection.setReadTimeout(5000)\n    connection.connect()\n    if(connection.getResponseCode \u003e\u003d 400){\n        println(\"error\")\n    }\n    else {\n        url #\u003e new File(fileName) !!\n    }\n}",
      "user": "anonymous",
      "dateUpdated": "2019-01-08 21:46:09.146",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "fileDownloader: (urlOfFileToDownload: String, fileName: String)Any\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546941769183_-984081649",
      "id": "20190108-100249_1902736060",
      "dateCreated": "2019-01-08 10:02:49.183",
      "dateStarted": "2019-01-08 21:46:09.275",
      "dateFinished": "2019-01-08 21:46:10.092",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Master Files List Creator Function",
      "user": "anonymous",
      "dateUpdated": "2019-01-08 10:08:04.157",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eMaster Files List Creator Function\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546942049359_-1002749742",
      "id": "20190108-100729_994043252",
      "dateCreated": "2019-01-08 10:07:29.359",
      "dateStarted": "2019-01-08 10:08:04.179",
      "dateFinished": "2019-01-08 10:08:04.213",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "  def referenceCreator(masterFileList: String) \u003d {\n    val bufferedSource \u003d fromFile(masterFileList)\n    val masterCSV \u003d new File(\"/tmp/masterfilelist.csv\")\n    \n    val writer \u003d CSVWriter.open(masterCSV)\n    writer.writeRow(List(\"Date\", \"Type\", \"Link\"))\n    for (line \u003c- bufferedSource.getLines) {\n      val parsedLine \u003d line.split(\" \")\n      if(parsedLine.length \u003d\u003d 3) {\n        val link \u003d parsedLine(2)\n\n        val parsedLink \u003d link.split(\"/\")\n        val parsedData \u003d parsedLink.last.split(\"\\\\.\")\n\n        val fileCategory \u003d parsedData(1)\n\n        val DATE_FORMAT \u003d \"yyyyMMddHHmmss\"\n        val dateFormat \u003d new SimpleDateFormat(DATE_FORMAT)\n        val date \u003d dateFormat.parse(parsedData(0)).getTime\n\n        writer.writeRow(List(date, fileCategory, link))\n      }\n    }\n\n    bufferedSource.close\n    writer.close()\n  }",
      "user": "anonymous",
      "dateUpdated": "2019-01-08 21:45:07.558",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "referenceCreator: (masterFileList: String)Unit\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546942089795_791522893",
      "id": "20190108-100809_1850143691",
      "dateCreated": "2019-01-08 10:08:09.795",
      "dateStarted": "2019-01-08 21:45:07.723",
      "dateFinished": "2019-01-08 21:45:09.863",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### GEDELT Data Downloader Function",
      "user": "anonymous",
      "dateUpdated": "2019-01-08 21:50:01.670",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eGEDELT Data Downloader Function\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546980789928_-1948899268",
      "id": "20190108-205309_693811822",
      "dateCreated": "2019-01-08 20:53:09.928",
      "dateStarted": "2019-01-08 21:50:01.681",
      "dateFinished": "2019-01-08 21:50:01.713",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "  def getGDELTData(startDate: String, endDate: String, toDirectory: String) \u003d {\n    val DATE_FORMAT \u003d \"yyyyMMddHHmmss\"\n    val dateFormat \u003d new SimpleDateFormat(DATE_FORMAT)\n    val minDate \u003d dateFormat.parse(startDate).getTime\n    val maxDate \u003d dateFormat.parse(endDate).getTime\n\n    val reader \u003d CSVReader.open(new File(\"/tmp/masterfilelist.csv\"))\n    reader.readNext()\n    for(line \u003c- reader.iterator){\n      val date \u003d line(0).toLong\n      val fileCategory \u003d line(1)\n      val link \u003d line(2)\n      var filePath \u003d new File(\"/\")\n      var filePathBase \u003d new File(\"/\")\n      if(date \u003e\u003d minDate \u0026\u0026 date \u003c\u003d maxDate) {\n        val parsedLink \u003d link.split(\"/\")\n        val fileName \u003d parsedLink.last\n        if (fileCategory \u003d\u003d \"export\"){\n            filePathBase \u003d new File(toDirectory, \"events\")\n            filePath \u003d new File(filePathBase, fileName)\n        }\n        else{\n            filePathBase \u003d new File(toDirectory, fileCategory)\n            filePath \u003d new File(filePathBase, fileName)\n        }\n        if (! filePathBase.exists()){\n                filePathBase.mkdirs();\n        }\n        fileDownloader(link, filePath.getPath())\n      }\n    }\n    reader.close()\n  }",
      "user": "anonymous",
      "dateUpdated": "2019-01-08 21:47:58.974",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "getGDELTData: (startDate: String, endDate: String, toDirectory: String)Unit\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546939604758_2134251409",
      "id": "20190108-092644_1811827060",
      "dateCreated": "2019-01-08 09:26:44.758",
      "dateStarted": "2019-01-08 21:47:59.084",
      "dateFinished": "2019-01-08 21:48:00.350",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Master List Download and Reference List Creation",
      "user": "anonymous",
      "dateUpdated": "2019-01-08 21:50:48.917",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eMaster List Download and Reference List Creation\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546984215021_-706457144",
      "id": "20190108-215015_1682215240",
      "dateCreated": "2019-01-08 21:50:15.022",
      "dateStarted": "2019-01-08 21:50:48.930",
      "dateFinished": "2019-01-08 21:50:48.977",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "fileDownloader(\"http://data.gdeltproject.org/gdeltv2/masterfilelist.txt\", \"/home/lem/GDELT/masterfilelist.txt\")\nreferenceCreator(\"/home/lem/GDELT/masterfilelist.txt\")",
      "user": "anonymous",
      "dateUpdated": "2019-01-08 21:57:10.920",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res20: Any \u003d \"\"\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546942186484_-971464319",
      "id": "20190108-100946_1747918864",
      "dateCreated": "2019-01-08 10:09:46.484",
      "dateStarted": "2019-01-08 20:49:48.588",
      "dateFinished": "2019-01-08 20:50:01.811",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### GDELT Data",
      "user": "anonymous",
      "dateUpdated": "2019-01-08 21:51:10.933",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eGDELT Data\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1546984253055_1032295297",
      "id": "20190108-215053_1408859221",
      "dateCreated": "2019-01-08 21:50:53.055",
      "dateStarted": "2019-01-08 21:51:10.936",
      "dateFinished": "2019-01-08 21:51:10.951",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "getGDELTData(\"20180218000000\", \"20180218236060\", \"/home/lem/GDELTData/\")",
      "user": "anonymous",
      "dateUpdated": "2019-01-08 21:51:36.077",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 257.5,
              "optionOpen": false
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1546981721094_-440973114",
      "id": "20190108-210841_54176",
      "dateCreated": "2019-01-08 21:08:41.095",
      "dateStarted": "2019-01-08 21:51:36.166",
      "dateFinished": "2019-01-08 21:49:11.230",
      "status": "ABORT",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1546942167263_2140354307",
      "id": "20190108-100927_258712964",
      "dateCreated": "2019-01-08 10:09:27.263",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "gdeltDataDownloader",
  "id": "2E214JY3B",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}